This code defines a `Settings` class that is responsible for managing and storing application settings in a JSON file. Here is an explanation of the key parts of the code:

1. The `__init__` method: This method initializes the `Settings` class and takes a boolean parameter `testing`. It determines which settings file to load based on whether testing mode is enabled or not.

2. The `get_config_dir` function: This function is imported from `aw_core.dirs` module and is used to get the configuration directory path where the settings file will be stored.

3. The `load` method: This method loads the settings data from the JSON file specified by `self.config_file` if it exists.

4. The `save` method: This method saves the settings data to the JSON file specified by `self.config_file`.

5. The `get` method: This method retrieves the value associated with a given key from the settings data. If no key is provided, it returns the entire settings data.

6. The `set` method: This method sets a key-value pair in the settings data. If the value is not provided or is empty, it removes the key from the settings data.

7. The `__getitem__` and `__setitem__` methods: These methods allow accessing and setting settings using indexing syntax (e.g., `settings['key']`).

Overall, this class provides a convenient way to manage application settings by loading, updating, and saving them in a JSON file.